name: Deploy Mchangohub Backend Live Service

on:
  workflow_dispatch:
  push:
    branches:
      - master

concurrency:
  group: '${{ github.workflow }}-${{ github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-22.04

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Declare docker tag variable
        id: vars
        shell: bash
        run: |
          GIT_HASH=$(git rev-parse --short "${GITHUB_SHA}")
          echo "docker_tag=$(echo ${GITHUB_REF##*/}-${GIT_HASH})" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push multi-platform image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: osiru/mchangohub:${{ env.docker_tag }}
          platforms: linux/amd64,linux/arm64/v8

      - name: Run deployment commands
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.MVPM_SERVER_IP }}
          username: ${{ secrets.MVPM_SSH_USER }}
          port: 22
          key: ${{ secrets.MVPM_PASSWORD_SSH_KEY }}
          script_stop: true
          script: |
            set -e
            sudo chown -R $USER:$USER /srv/apps/live/mchangohub
            cd /srv/apps/live/mchangohub
            echo "BACKEND_TAG=${{ env.docker_tag }}" > .env
            cat .env
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
            docker-compose pull
            docker-compose up -d --build

  clean-up:
    name: Clean up Docker Cache
    runs-on: ubuntu-22.04
    needs: build-and-deploy

    steps:
      - name: SSH and Prune Docker Resources
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.MVPM_SERVER_IP }}
          username: ${{ secrets.MVPM_SSH_USER }}
          port: 22
          key: ${{ secrets.MVPM_PASSWORD_SSH_KEY }}
          script: |
            docker image prune -af
            docker builder prune -af