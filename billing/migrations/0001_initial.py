# Generated by Django 5.2.5 on 2025-08-10 07:50

import django.db.models.deletion
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('base', '0001_initial'),
        ('contributions', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BalanceLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('synced', models.BooleanField(default=False)),
                ('reference', models.CharField(blank=True, max_length=100, null=True)),
                ('receipt', models.CharField(blank=True, max_length=100, null=True)),
                ('amount_transacted', models.DecimalField(decimal_places=2, default=0.0, max_digits=25)),
                ('total_balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=25)),
                ('description', models.TextField(blank=True, null=True)),
                ('balance_entry_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.balanceentrytype')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.state')),
            ],
            options={
                'verbose_name': 'Balance Log',
                'verbose_name_plural': 'Balance Logs',
                'ordering': ('-date_created',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BalanceLogEntry',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('synced', models.BooleanField(default=False)),
                ('amount_transacted', models.DecimalField(decimal_places=2, default=0.0, max_digits=25)),
                ('account_field_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.accountfieldtype')),
                ('entry_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.entrytype')),
                ('process_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.balancelog')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.state')),
            ],
            options={
                'verbose_name': 'Balance Log Entry',
                'verbose_name_plural': 'Balance Logs Entries',
            },
        ),
        migrations.CreateModel(
            name='WalletAccount',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('synced', models.BooleanField(default=False)),
                ('account_number', models.CharField(db_index=True, max_length=20, unique=True)),
                ('current', models.DecimalField(db_index=True, decimal_places=2, default=Decimal('0.00'), max_digits=18)),
                ('available', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=18)),
                ('reserved', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=18)),
                ('uncleared', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=18)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('is_frozen', models.BooleanField(db_index=True, default=False)),
                ('currency', models.CharField(db_index=True, default='KES', max_length=3)),
                ('version', models.PositiveIntegerField(default=1)),
                ('last_transaction_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('contribution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wallet_accounts', to='contributions.contribution')),
            ],
            options={
                'verbose_name': 'Wallet Account',
                'verbose_name_plural': 'Wallet Accounts',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='WalletTransaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('synced', models.BooleanField(default=False)),
                ('transaction_type', models.CharField(choices=[('topup', 'TopUp'), ('payment', 'Payment'), ('adjustment', 'Manual Adjustment'), ('refund', 'Refund')], db_index=True, max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=18)),
                ('balance_before', models.DecimalField(decimal_places=2, max_digits=18)),
                ('balance_after', models.DecimalField(decimal_places=2, max_digits=18)),
                ('reference', models.CharField(db_index=True, max_length=100, unique=True)),
                ('receipt_number', models.CharField(db_index=True, max_length=100, unique=True)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('reversed', 'Reversed')], db_index=True, default='pending', max_length=10)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('wallet_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='billing.walletaccount')),
            ],
            options={
                'verbose_name': 'Wallet Transaction',
                'verbose_name_plural': 'Wallet Transactions',
                'ordering': ['-id'],
            },
        ),
        migrations.AddField(
            model_name='balancelog',
            name='transaction',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.wallettransaction'),
        ),
        migrations.CreateModel(
            name='WorkflowActionLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('synced', models.BooleanField(default=False)),
                ('action_type', models.CharField(choices=[('money_to_uncleared', 'Money Added to Uncleared'), ('money_to_current', 'Money Added to Current'), ('money_from_uncleared', 'Money Deducted from Uncleared'), ('money_to_available', 'Money Added to Available'), ('money_from_available', 'Money Deducted from Available'), ('money_to_reserved', 'Money Added to Reserved'), ('money_from_reserved', 'Money Deducted from Reserved'), ('money_from_current', 'Money Deducted from Current')], db_index=True, max_length=30)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=18)),
                ('balance_type_before', models.DecimalField(decimal_places=2, max_digits=18)),
                ('balance_type_after', models.DecimalField(decimal_places=2, max_digits=18)),
                ('workflow_step', models.CharField(max_length=50)),
                ('sequence_order', models.PositiveSmallIntegerField()),
                ('reference', models.CharField(db_index=True, max_length=100)),
                ('description', models.CharField(max_length=255)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('parent_transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workflow_actions', to='billing.wallettransaction')),
                ('wallet_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workflow_actions', to='billing.walletaccount')),
            ],
            options={
                'verbose_name': 'Workflow Action Log',
                'verbose_name_plural': 'Workflow Action Logs',
                'ordering': ['-id'],
            },
        ),
        migrations.AddIndex(
            model_name='walletaccount',
            index=models.Index(fields=['contribution', 'is_active'], name='billing_wal_contrib_931bd6_idx'),
        ),
        migrations.AddIndex(
            model_name='walletaccount',
            index=models.Index(fields=['account_number'], name='billing_wal_account_a3f8ba_idx'),
        ),
        migrations.AddIndex(
            model_name='walletaccount',
            index=models.Index(fields=['current', 'is_active'], name='billing_wal_current_d15589_idx'),
        ),
        migrations.AddIndex(
            model_name='walletaccount',
            index=models.Index(fields=['currency', 'is_active'], name='billing_wal_currenc_f3541b_idx'),
        ),
        migrations.AddIndex(
            model_name='walletaccount',
            index=models.Index(fields=['last_transaction_date'], name='billing_wal_last_tr_c8ab30_idx'),
        ),
        migrations.AddConstraint(
            model_name='walletaccount',
            constraint=models.CheckConstraint(condition=models.Q(('current__gte', 0)), name='positive_current'),
        ),
        migrations.AddConstraint(
            model_name='walletaccount',
            constraint=models.CheckConstraint(condition=models.Q(('available__gte', 0)), name='positive_available'),
        ),
        migrations.AddConstraint(
            model_name='walletaccount',
            constraint=models.CheckConstraint(condition=models.Q(('reserved__gte', 0)), name='positive_reserved'),
        ),
        migrations.AddConstraint(
            model_name='walletaccount',
            constraint=models.CheckConstraint(condition=models.Q(('uncleared__gte', 0)), name='positive_uncleared'),
        ),
        migrations.AddIndex(
            model_name='wallettransaction',
            index=models.Index(fields=['wallet_account', '-id'], name='billing_wal_wallet__6ef0f9_idx'),
        ),
        migrations.AddIndex(
            model_name='wallettransaction',
            index=models.Index(fields=['transaction_type', '-id'], name='billing_wal_transac_ff0477_idx'),
        ),
        migrations.AddIndex(
            model_name='wallettransaction',
            index=models.Index(fields=['reference'], name='billing_wal_referen_e673ab_idx'),
        ),
        migrations.AddIndex(
            model_name='wallettransaction',
            index=models.Index(fields=['status', '-id'], name='billing_wal_status_276c8d_idx'),
        ),
        migrations.AddIndex(
            model_name='wallettransaction',
            index=models.Index(fields=['date_created'], name='billing_wal_date_cr_869e4d_idx'),
        ),
        migrations.AddIndex(
            model_name='wallettransaction',
            index=models.Index(fields=['wallet_account', 'transaction_type', '-id'], name='billing_wal_wallet__6b2642_idx'),
        ),
        migrations.AddIndex(
            model_name='workflowactionlog',
            index=models.Index(fields=['wallet_account', '-id'], name='billing_wor_wallet__94ba23_idx'),
        ),
        migrations.AddIndex(
            model_name='workflowactionlog',
            index=models.Index(fields=['parent_transaction', 'sequence_order'], name='billing_wor_parent__e8ff3c_idx'),
        ),
        migrations.AddIndex(
            model_name='workflowactionlog',
            index=models.Index(fields=['action_type', '-id'], name='billing_wor_action__eb1455_idx'),
        ),
        migrations.AddIndex(
            model_name='workflowactionlog',
            index=models.Index(fields=['workflow_step', '-id'], name='billing_wor_workflo_fd0311_idx'),
        ),
        migrations.AddIndex(
            model_name='workflowactionlog',
            index=models.Index(fields=['reference'], name='billing_wor_referen_13efd7_idx'),
        ),
        migrations.AddIndex(
            model_name='workflowactionlog',
            index=models.Index(fields=['date_created'], name='billing_wor_date_cr_6cde67_idx'),
        ),
    ]
